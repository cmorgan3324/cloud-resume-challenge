module.api_backend.archive_file.lambda_zip: Refreshing state... [id=8b3907e8919a831977aa8e98d3c040ae9e5f9526]
module.static_site.data.aws_route53_zone.primary: Reading...
module.static_site.aws_cloudfront_origin_access_identity.oai: Refreshing state... [id=E6L3KAFRGZDLA]
module.static_site.aws_iam_role.cloudfront_role: Refreshing state... [id=vibebycory-resume-content-cf-role]
module.api_backend.aws_apigatewayv2_api.http_api: Refreshing state... [id=56y7wocza7]
module.api_backend.aws_iam_role.lambda_role: Refreshing state... [id=resume-counter-function-dev-role]
module.api_backend.aws_dynamodb_table.counter_table: Refreshing state... [id=resume-visitor-counter]
module.static_site.aws_s3_bucket.site: Refreshing state... [id=vibebycory-resume-content]
module.api_backend.aws_apigatewayv2_stage.default: Refreshing state... [id=$default]
module.static_site.data.aws_route53_zone.primary: Read complete after 0s [id=Z0184558A8BYZ5FK96SD]
module.api_backend.aws_iam_role_policy_attachment.lambda_dynamo: Refreshing state... [id=resume-counter-function-dev-role-20250529214048263400000002]
module.api_backend.aws_iam_role_policy_attachment.lambda_logs: Refreshing state... [id=resume-counter-function-dev-role-20250529214048325200000003]
module.api_backend.aws_lambda_function.counter: Refreshing state... [id=resume-counter-function]
module.static_site.aws_s3_bucket_policy.site_policy: Refreshing state... [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_public_access_block.site: Refreshing state... [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_ownership_controls.site: Refreshing state... [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_website_configuration.site: Refreshing state... [id=vibebycory-resume-content]
module.api_backend.aws_lambda_permission.apigw: Refreshing state... [id=AllowAPIGatewayInvoke]
module.api_backend.aws_apigatewayv2_integration.lambda_integration: Refreshing state... [id=c406fzr]
module.api_backend.aws_apigatewayv2_route.get_count: Refreshing state... [id=3isj2bb]
module.static_site.aws_s3_bucket_acl.site_acl: Refreshing state... [id=vibebycory-resume-content,public-read]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # module.static_site.aws_acm_certificate.site_cert will be created
  + resource "aws_acm_certificate" "site_cert" {
      + arn                       = (known after apply)
      + domain_name               = "vibebycory.dev"
      + domain_validation_options = [
          + {
              + domain_name           = "vibebycory.dev"
              + resource_record_name  = (known after apply)
              + resource_record_type  = (known after apply)
              + resource_record_value = (known after apply)
            },
        ]
      + id                        = (known after apply)
      + key_algorithm             = (known after apply)
      + not_after                 = (known after apply)
      + not_before                = (known after apply)
      + pending_renewal           = (known after apply)
      + renewal_eligibility       = (known after apply)
      + renewal_summary           = (known after apply)
      + status                    = (known after apply)
      + subject_alternative_names = [
          + "vibebycory.dev",
        ]
      + tags                      = {
          + "Name" = "TLS cert for vibebycory.dev"
        }
      + tags_all                  = {
          + "Name" = "TLS cert for vibebycory.dev"
        }
      + type                      = (known after apply)
      + validation_emails         = (known after apply)
      + validation_method         = "DNS"

      + options (known after apply)
    }

  # module.static_site.aws_acm_certificate_validation.site_cert_validation will be created
  + resource "aws_acm_certificate_validation" "site_cert_validation" {
      + certificate_arn         = (known after apply)
      + id                      = (known after apply)
      + validation_record_fqdns = (known after apply)
    }

  # module.static_site.aws_cloudfront_distribution.site_cdn will be created
  + resource "aws_cloudfront_distribution" "site_cdn" {
      + aliases                         = [
          + "vibebycory.dev",
        ]
      + arn                             = (known after apply)
      + caller_reference                = (known after apply)
      + continuous_deployment_policy_id = (known after apply)
      + default_root_object             = "index.html"
      + domain_name                     = (known after apply)
      + enabled                         = true
      + etag                            = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + http_version                    = "http2"
      + id                              = (known after apply)
      + in_progress_validation_batches  = (known after apply)
      + is_ipv6_enabled                 = true
      + last_modified_time              = (known after apply)
      + price_class                     = "PriceClass_All"
      + retain_on_delete                = false
      + staging                         = false
      + status                          = (known after apply)
      + tags                            = {
          + "Environment" = "dev"
          + "Name"        = "CloudFront for vibebycory.dev"
        }
      + tags_all                        = {
          + "Environment" = "dev"
          + "Name"        = "CloudFront for vibebycory.dev"
        }
      + trusted_key_groups              = (known after apply)
      + trusted_signers                 = (known after apply)
      + wait_for_deployment             = true

      + default_cache_behavior {
          + allowed_methods        = [
              + "GET",
              + "HEAD",
            ]
          + cached_methods         = [
              + "GET",
              + "HEAD",
            ]
          + compress               = false
          + default_ttl            = (known after apply)
          + max_ttl                = (known after apply)
          + min_ttl                = 0
          + target_origin_id       = "s3-vibebycory-resume-content"
          + trusted_key_groups     = (known after apply)
          + trusted_signers        = (known after apply)
          + viewer_protocol_policy = "redirect-to-https"

          + forwarded_values {
              + headers                 = (known after apply)
              + query_string            = false
              + query_string_cache_keys = (known after apply)

              + cookies {
                  + forward           = "none"
                  + whitelisted_names = (known after apply)
                }
            }

          + grpc_config (known after apply)
        }

      + origin {
          + connection_attempts      = 3
          + connection_timeout       = 10
          + domain_name              = "vibebycory-resume-content.s3.us-east-1.amazonaws.com"
          + origin_id                = "s3-vibebycory-resume-content"
            # (2 unchanged attributes hidden)

          + s3_origin_config {
              + origin_access_identity = "origin-access-identity/cloudfront/E6L3KAFRGZDLA"
            }
        }

      + restrictions {
          + geo_restriction {
              + locations        = (known after apply)
              + restriction_type = "none"
            }
        }

      + viewer_certificate {
          + acm_certificate_arn      = (known after apply)
          + minimum_protocol_version = "TLSv1.2_2021"
          + ssl_support_method       = "sni-only"
        }
    }

  # module.static_site.aws_iam_policy.s3_read_policy will be created
  + resource "aws_iam_policy" "s3_read_policy" {
      + arn              = (known after apply)
      + attachment_count = (known after apply)
      + description      = "policy allowing cloudfront to read from S3 bucket"
      + id               = (known after apply)
      + name             = "vibebycory-resume-content-cloudfront-s3-read"
      + name_prefix      = (known after apply)
      + path             = "/"
      + policy           = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = [
                          + "s3:GetObject",
                        ]
                      + Effect    = "Allow"
                      + Principal = {
                          + AWS = "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E6L3KAFRGZDLA"
                        }
                      + Resource  = [
                          + "arn:aws:s3:::vibebycory-resume-content/*",
                        ]
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id        = (known after apply)
      + tags_all         = (known after apply)
    }

  # module.static_site.aws_iam_role_policy_attachment.attach_s3_read will be created
  + resource "aws_iam_role_policy_attachment" "attach_s3_read" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "vibebycory-resume-content-cf-role"
    }

  # module.static_site.aws_route53_record.cert_validation will be created
  + resource "aws_route53_record" "cert_validation" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = (known after apply)
      + records         = (known after apply)
      + ttl             = 300
      + type            = (known after apply)
      + zone_id         = "Z0184558A8BYZ5FK96SD"
    }

  # module.static_site.aws_s3_bucket_acl.site_acl will be updated in-place
  ~ resource "aws_s3_bucket_acl" "site_acl" {
      ~ acl                   = "public-read" -> "private"
        id                    = "vibebycory-resume-content,public-read"
        # (2 unchanged attributes hidden)

      ~ access_control_policy (known after apply)
      - access_control_policy {
          - grant {
              - permission = "READ" -> null

              - grantee {
                    id            = null
                  - type          = "Group" -> null
                  - uri           = "http://acs.amazonaws.com/groups/global/AllUsers" -> null
                    # (2 unchanged attributes hidden)
                }
            }
          - grant {
              - permission = "FULL_CONTROL" -> null

              - grantee {
                  - display_name  = "cmorgan3324" -> null
                  - id            = "15ffb558ec2e69422b7125c78d0930b47d4ec1b779a37ef4ad3b3896724da809" -> null
                  - type          = "CanonicalUser" -> null
                    # (2 unchanged attributes hidden)
                }
            }
          - owner {
              - display_name = "cmorgan3324" -> null
              - id           = "15ffb558ec2e69422b7125c78d0930b47d4ec1b779a37ef4ad3b3896724da809" -> null
            }
        }
    }

  # module.static_site.aws_s3_bucket_policy.site_policy will be updated in-place
  ~ resource "aws_s3_bucket_policy" "site_policy" {
        id     = "vibebycory-resume-content"
      ~ policy = jsonencode(
          ~ {
              ~ Statement = [
                  ~ {
                      ~ Principal = "*" -> {
                          + AWS = "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E6L3KAFRGZDLA"
                        }
                        # (3 unchanged attributes hidden)
                    },
                ]
                # (1 unchanged attribute hidden)
            }
        )
        # (1 unchanged attribute hidden)
    }

  # module.static_site.aws_s3_bucket_public_access_block.site will be updated in-place
  ~ resource "aws_s3_bucket_public_access_block" "site" {
      ~ block_public_acls       = false -> true
      ~ block_public_policy     = false -> true
        id                      = "vibebycory-resume-content"
      ~ ignore_public_acls      = false -> true
      ~ restrict_public_buckets = false -> true
        # (1 unchanged attribute hidden)
    }

Plan: 6 to add, 3 to change, 0 to destroy.

Changes to Outputs:
  + site_cdn    = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: 
module.static_site.aws_iam_policy.s3_read_policy: Creating...
module.static_site.aws_s3_bucket_policy.site_policy: Modifying... [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_public_access_block.site: Modifying... [id=vibebycory-resume-content]
module.static_site.aws_acm_certificate.site_cert: Creating...
module.static_site.aws_s3_bucket_policy.site_policy: Modifications complete after 1s [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_public_access_block.site: Modifications complete after 1s [id=vibebycory-resume-content]
module.static_site.aws_s3_bucket_acl.site_acl: Modifying... [id=vibebycory-resume-content,public-read]
module.static_site.aws_s3_bucket_acl.site_acl: Modifications complete after 0s [id=vibebycory-resume-content,private]
module.static_site.aws_acm_certificate.site_cert: Creation complete after 8s [id=arn:aws:acm:us-east-1:864899872694:certificate/e32843a2-831b-4563-b01c-61e684945089]
module.static_site.aws_route53_record.cert_validation: Creating...
module.static_site.aws_route53_record.cert_validation: Still creating... [00m10s elapsed]
module.static_site.aws_route53_record.cert_validation: Still creating... [00m20s elapsed]
module.static_site.aws_route53_record.cert_validation: Still creating... [00m30s elapsed]
module.static_site.aws_route53_record.cert_validation: Creation complete after 31s [id=Z0184558A8BYZ5FK96SD__3afcfe0e8e2e44d0e7f246b31e9cd4b8.vibebycory.dev._CNAME]
module.static_site.aws_acm_certificate_validation.site_cert_validation: Creating...
module.static_site.aws_acm_certificate_validation.site_cert_validation: Creation complete after 0s [id=2025-05-29 23:35:06.484 +0000 UTC]
module.static_site.aws_cloudfront_distribution.site_cdn: Creating...
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [00m10s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [00m20s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [00m30s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [00m40s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [00m50s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m00s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m10s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m20s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m30s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m40s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [01m50s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m00s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m10s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m20s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m30s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m40s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [02m50s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [03m00s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [03m10s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [03m20s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [03m30s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Still creating... [03m40s elapsed]
module.static_site.aws_cloudfront_distribution.site_cdn: Creation complete after 3m41s [id=E2KHS1IAHTASEL]

Error: creating IAM Policy (vibebycory-resume-content-cloudfront-s3-read): operation error IAM: CreatePolicy, https response error StatusCode: 400, RequestID: 18739d45-7401-46e6-be20-48aaa113c5e1, MalformedPolicyDocument: Policy document should not specify a principal.

  with module.static_site.aws_iam_policy.s3_read_policy,
  on ../../modules/static-site/cloudfront.tf line 8, in resource "aws_iam_policy" "s3_read_policy":
   8: resource "aws_iam_policy" "s3_read_policy" {

