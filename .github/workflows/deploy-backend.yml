# name: Deploy Back-end (Terraform → Lambda/API)

# on:
#   push:
#     paths:
#       - 'aws-infra/**'
#       - '.github/workflows/deploy-backend.yml'

# jobs:
#   test-and-deploy:
#     runs-on: ubuntu-latest

#     env:
#       AWS_REGION: ${{ secrets.AWS_REGION }}
#       AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}


#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'

#       - name: Install Python dependencies (pytest, moto, boto3)
#         run: |
#           python -m pip install --upgrade pip
#           pip install pytest boto3 'moto[all]'

#       # run unit tests for lambda
#       - name: Run Lambda unit tests
#         run: pytest aws-infra/environments/dev/

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: '1.12.1'

#       - name: Terraform Init (w/ remote S3 backend)
#         working-directory: aws-infra/environments/dev
#         run: |
#           terraform init \
#             -input=false \
#             -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
#             -backend-config="key=serverless-web-resume/dev/terraform.tfstate" \
#             -backend-config="region=${{ secrets.AWS_REGION }}" \
#             -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"

      

#       - name: Terraform Validate & Plan
#         working-directory: aws-infra/environments/dev
#         run: |
#           terraform validate
#           terraform plan -out=tfplan -input=false

#       - name: Terraform Apply
#         working-directory: aws-infra/environments/dev
#         run: terraform apply -input=false tfplan

name: Deploy Back-end (Terraform → Lambda/API)

on:
  push:
    paths:
      - 'aws-infra/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies (pytest, moto, boto3)
        run: |
          python -m pip install --upgrade pip
          pip install pytest boto3 'moto[all]'

      # run unit tests for lambda
      - name: Run Lambda unit tests
        run: pytest aws-infra/environments/dev/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.12.1'

      - name: Clean old Terraform cache
        working-directory: aws-infra/environments/dev
        run: |
          rm -rf .terraform
          rm -f terraform.tfplan    

      - name: Terraform Init (w/ remote S3 backend)
        working-directory: aws-infra/environments/dev
        run: |
          terraform init \
            -input=false \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=serverless-web-resume/dev/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"

      - name: Debug list module files
        working-directory: aws-infra/environments/dev
        run: |
          echo "Current working directory: $(pwd)"
          echo ""
          echo "--- Listing aws-infra/modules/api-backend directory ---"
          ls -R ../../modules/api-backend || true
          echo ""
          echo "--- Showing first 30 lines of main.tf in modules/api-backend ---"
          sed -n '1,30p' ../../modules/api-backend/main.tf || true

      - name: Debug show lambda source in root
        working-directory: aws-infra/environments/dev
        run: |
          echo "--- Listing environments/dev directory ---"
          ls -R .

          echo ""
          echo "--- Specifically check dev/lambda exists ---"
          ls lambda || echo ">>> environments/dev/lambda does not exist!"

      - name: Show Terraform root path
        working-directory: aws-infra/environments/dev
        run: |
          echo "Working dir: $(pwd)"
          terraform init -input=false -backend=false
          echo "Terraform path.root = $(terraform console -no-color <<< "path.root")"
          echo "Does source folder exist? $(ls ${path.root}/lambda || echo 'missing')"

      - name: Terraform Validate & Plan
        working-directory: aws-infra/environments/dev
        run: |
          terraform validate
          terraform plan -out=tfplan -input=false

      - name: Terraform Apply
        working-directory: aws-infra/environments/dev
        run: terraform apply -input=false tfplan
