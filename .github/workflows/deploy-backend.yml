name: Deploy Back-end (Terraform â†’ Lambda/API)

on:
  push:
    paths:
      - 'aws-infra/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies (pytest, moto, boto3)
        run: |
          python -m pip install --upgrade pip
          pip install pytest boto3 'moto[all]'

      - name: Run Lambda unit tests
        run: pytest aws-infra/environments/dev/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.12.1'

      - name: Clean old Terraform cache
        working-directory: aws-infra/environments/dev
        run: |
          rm -rf .terraform
          rm -f terraform.tfplan

      - name: Terraform Init (w/ remote S3 backend)
        working-directory: aws-infra/environments/dev
        run: |
          terraform init \
            -input=false \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=serverless-web-resume/dev/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \

      - name: Debug show module & root contents
        working-directory: aws-infra/environments/dev
        run: |
          echo "Current working directory: $(pwd)"

          echo ""
          echo "--- modules/api-backend contents ---"
          ls -R ../../modules/api-backend || true

          echo ""
          echo "--- environments/dev contents ---"
          ls -R . || true

          echo ""
          echo "--- Check that environments/dev/lambda exists ---"
          ls lambda || echo ">>> environments/dev/lambda is missing!"

      - name: Terraform Validate & Plan
        working-directory: aws-infra/environments/dev
        run: |
          terraform validate
          terraform plan -out=tfplan -input=false

      - name: Terraform Apply
        working-directory: aws-infra/environments/dev
        run: terraform apply -auto-approve tfplan
